{
  "openapi": "3.0.0",
  "paths": {
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "User with this username or email already exists"
          }
        },
        "summary": "Register a new user",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        },
        "summary": "Login to the system",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/profile": {
      "get": {
        "operationId": "AuthController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get user profile",
        "tags": [
          "Authentication"
        ]
      }
    }
  },
  "info": {
    "title": "Social Network API",
    "description": "API Documentation for Social Network",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "RegisterRequestDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username",
            "example": "john_doe"
          },
          "email": {
            "type": "string",
            "description": "Email address",
            "example": "john@example.com"
          },
          "password": {
            "type": "string",
            "description": "Password (minimum 6 characters)",
            "example": "password123",
            "minLength": 6
          }
        },
        "required": [
          "username",
          "email",
          "password"
        ]
      },
      "RegisterResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "User ID",
            "example": 1
          },
          "username": {
            "type": "string",
            "description": "Username",
            "example": "john_doe"
          },
          "email": {
            "type": "string",
            "description": "Email address",
            "example": "john@example.com"
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "description": "Creation date",
            "example": "2023-01-01T00:00:00.000Z"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "description": "Last update date",
            "example": "2023-01-01T00:00:00.000Z"
          }
        },
        "required": [
          "id",
          "username",
          "email",
          "created_at",
          "updated_at"
        ]
      },
      "LoginRequestDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username",
            "example": "john_doe"
          },
          "password": {
            "type": "string",
            "description": "Password",
            "example": "password123"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "LoginResponseDto": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "JWT access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        },
        "required": [
          "access_token"
        ]
      },
      "ProfileResponseDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number",
            "description": "User ID",
            "example": 1
          },
          "username": {
            "type": "string",
            "description": "Username",
            "example": "john_doe"
          }
        },
        "required": [
          "userId",
          "username"
        ]
      }
    }
  }
}