services:
  # PostgreSQL Master
  postgres-master:
    image: postgres:16-alpine
    container_name: otus-social-postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DATABASE_USER:-postgres}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-postgres}
      POSTGRES_DB: ${DATABASE_NAME:-otus_social}
      POSTGRES_INITDB_ARGS: "--auth-host=md5"
    volumes:
      - postgres_master_data:/var/lib/postgresql/data
      - ./db-configs/postgresql-master.conf:/etc/postgresql/postgresql.conf:ro
      - ./db-configs/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
      - ./scripts/init-replication.sh:/docker-entrypoint-initdb.d/init-replication.sh:ro
    networks:
      - replication_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-postgres} -d ${DATABASE_NAME:-otus_social}"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres
      -c config_file=/etc/postgresql/postgresql.conf
      -c hba_file=/etc/postgresql/pg_hba.conf

  # PostgreSQL Slave 1
  postgres-slave1:
    image: postgres:16-alpine
    container_name: pgslave
    restart: always
    ports:
      - "15432:5432"
    environment:
      POSTGRES_PASSWORD: pass
      PGUSER: postgres
      PGPASSWORD: replicator_password
    depends_on:
      postgres-master:
        condition: service_healthy
    volumes:
      - postgres_slave1_data:/var/lib/postgresql/data
      - ./scripts/init-slave.sh:/usr/local/bin/init-slave.sh:ro
    networks:
      - replication_net
    command: ["bash", "/usr/local/bin/init-slave.sh"]

  # PostgreSQL Slave 2
  postgres-slave2:
    image: postgres:16-alpine
    container_name: pgslave2
    restart: always
    ports:
      - "25432:5432"
    environment:
      POSTGRES_PASSWORD: pass
      PGUSER: postgres
      PGPASSWORD: replicator_password
    depends_on:
      postgres-master:
        condition: service_healthy
    volumes:
      - postgres_slave2_data:/var/lib/postgresql/data
      - ./scripts/init-slave.sh:/usr/local/bin/init-slave.sh:ro
    networks:
      - replication_net
    command: ["bash", "/usr/local/bin/init-slave.sh"]

volumes:
  postgres_master_data:
  postgres_slave1_data:
  postgres_slave2_data:

networks:
  replication_net:
    driver: bridge